SCRIPT TestLevel_Setup IF IsCareerMode ELSE ENDIF ENDSCRIPT
SCRIPT TestLevel_startup LoadSound "Skater\\bitchslap2" LoadSound "Shared\\Hits\\HitGlassPane2x" LoadSound "Shared\\Auto\\LA_Skid_11" Vol = 100 Dropoff = 150 LoadSound "Shared\\Auto\\CarBrakeSqueal" Vol = 100 Dropoff = 150 LoadSound "Shared\\Auto\\CarLoop" Vol = 100 Dropoff = 150 PosUpdateWithDoppler LoadSound "Shared\\Auto\\CarHorn_11" Vol = 100 Dropoff = 150 LoadSound "Shared\\Hits\\HitMetalCan" Vol = 100 Dropoff = 150 PosUpdateWithDoppler LoadSound "Shared\\Hits\\BonkBush" Vol = 100 Dropoff = 0 LoadSound "Shared\\Auto\\CarLoop" Vol = 100 Dropoff = 150 PosUpdateWithDoppler LoadSound "Vehicles\\Vehicle_Tire_Loop" LoadSound "Terrains\\BonkMetal_11" SetTerrainMetalSmooth Animload_Ped_Driver animload_Ped_Baha ENDSCRIPT
SCRIPT TestLevel_Goals IF InMultiplayerGame Add_MultiPlayer_Mode_Goals ENDIF IF NOT InSplitScreenGame IF NOT GameModeEquals Is_SingleSession ENDIF ENDIF IF NOT InSplitScreenGame IF NOT GameModeEquals Is_SingleSession IF NOT InNetGame AddGoal_HighScore { goal_text = "TestLevel High Score" view_goals_text = "TestLevel High Score" goal_description = "Duuude!  Whoah...  Yeah!" score = 1 start_cam_anim = G_HS_CameraStart success_cam_anim = G_HS_CameraStart pro = "skater" full_name = "SIK" } ENDIF ENDIF ENDIF ENDSCRIPT
SCRIPT TOD_Script SWITCH <current_tod> CASE morning CASE day CASE evening CASE night DEFAULT printf "### no tod set ###" ENDSWITCH ENDSCRIPT
SCRIPT TestLevel_CarOutside Car_Generic01 turndist = 40 DefaultSpeed = 35 ENDSCRIPT
SCRIPT TestLevel_Skater_Spectator Obj_ClearExceptions Obj_SetException ex = SkaterInRadius scr = TestLevel_Skater_SpectatorFall Obj_SetInnerRadius 3 BEGIN RANDOM(1, 1, 1, 1, 1, 1, 1, 1, 1) RANDOMCASE Obj_PlayAnim Anim = Ped_M_Cheering RANDOMCASE Obj_PlayAnim Anim = Ped_M_ThumbUp RANDOMCASE Obj_PlayAnim Anim = Ped_M_Clap RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle1 RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle2 RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle3 RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle4 RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle5 RANDOMCASE Obj_PlayAnim Anim = Ped_M_CheerIdle6 RANDOMEND Obj_LookAtObject type = skater time = 0.30000001192 Obj_WaitAnimFinished REPEAT ENDSCRIPT
SCRIPT TestLevel_Skater_SpectatorFall Obj_ClearExceptions Obj_PlayAnim Anim = Ped_M_FalldownA Obj_SetException ex = SkaterOutOfRadius scr = TestLevel_Skater_SpectatorGetUp Obj_SetOuterRadius 20 ENDSCRIPT
SCRIPT TestLevel_Skater_SpectatorGetUp Obj_ClearExceptions Obj_PlayAnim Anim = Ped_M_GetUpA Obj_WaitAnimFinished Goto TestLevel_Skater_Spectator ENDSCRIPT
SCRIPT TestLevel_GoalPedAI Ped_InitAI stand avoid standing_anims = KGB_goal_wait ENDSCRIPT
SCRIPT TestLevel_StandPedAI Ped_InitAI stand avoid standing_anims = DJQBert_goal_wait ENDSCRIPT
SCRIPT TestLevel_StandPedAI_F Ped_InitAI stand avoid chick standing_anims = presenter_goal_wait ENDSCRIPT
SCRIPT Pigeon_Follow Obj_ApplyScaling { x = 2 y = 2 z = 2 } Obj_SetInnerRadius 500 Obj_SetException ex = SkaterInRadius scr = Pigeon_ChaseSkater BEGIN RANDOM(1, 1, 1) RANDOMCASE Obj_CycleAnim Anim = idle RANDOMCASE Obj_CycleAnim Anim = peck RANDOMCASE Obj_CycleAnim Anim = preen RANDOMEND REPEAT ENDSCRIPT
SCRIPT Pigeon_Idle Obj_MoveForward speed = 0 Obj_ClearExceptions Obj_SetInnerRadius 500 Obj_SetException ex = SkaterInRadius scr = Pigeon_ChaseSkater BEGIN RANDOM(1, 1, 1) RANDOMCASE Obj_CycleAnim Anim = idle RANDOMCASE Obj_CycleAnim Anim = peck RANDOMCASE Obj_CycleAnim Anim = preen RANDOMEND REPEAT ENDSCRIPT
SCRIPT Pigeon_ChaseSkater Obj_ClearExceptions Obj_SetInnerRadius 5 Obj_SetOuterRadius 1000 Obj_SetException ex = SkaterInRadius scr = Pigeon_Attack Obj_SetException ex = SkaterOutOfRadius scr = Pigeon_Idle BEGIN Obj_LookAtObject type = skater time = 0.10000000149 Obj_WaitRotate IF NOT Obj_GetCollision height = 0.50000000000 length = 50 IF NOT Obj_AnimEquals run Obj_PlayAnim Anim = run cycle ENDIF Obj_MoveForward dist = 600 speed = 10 acceleration = 1 ELSE IF NOT Obj_GetCollision height = 0.50000000000 length = 20 IF NOT Obj_AnimEquals run Obj_PlayAnim Anim = run cycle ENDIF Obj_MoveForward dist = 240 speed = 10 acceleration = 1 ELSE Obj_CycleAnim Anim = idle Goto Pigeon_Idle ENDIF ENDIF Obj_WaitMove REPEAT ENDSCRIPT
SCRIPT Pigeon_Attack Obj_ClearExceptions Obj_PlayAnim Anim = FlyHop Obj_MoveForward speed = 0 MakeSkaterGoto PedKnockDown PlaySound BitchSlap2 Obj_WaitAnimFinished Goto Pigeon_Idle ENDSCRIPT
SCRIPT TestLevel_CameraDist ENDSCRIPT
SCRIPT panel_testlevel_skaterdist time = 1500 SetProps just = [ left bottom ] rgba = [ 128 128 120 108 ] DoMorph time = 0 pos = PAIR(20.00000000000, 350.00000000000) scale = 0.89999997616 alpha = 255 ENDSCRIPT
SCRIPT TestLevel_ProximRain weathersetsnowactive IF inside WeatherSetSnowRate 1024 WeatherSetSnowSize 2 ELSE WeatherSetSnowRate 0.00000000000 ENDIF ENDSCRIPT
SCRIPT PlayAnims_CrowdA Obj_PlayAnim Anim = cheer1235 cycle BEGIN wait 1 frames REPEAT ENDSCRIPT
SCRIPT PlayAnims_CrowdB Obj_PlayAnim Anim = cheer1235 cycle BEGIN wait 1 frames REPEAT ENDSCRIPT
SCRIPT PlayAnims_CrowdC Obj_PlayAnim Anim = cheer1235 cycle BEGIN wait 1 frames REPEAT ENDSCRIPT
SCRIPT SlowSkater printf "slow skater" skater : setspeed 0 ENDSCRIPT
SCRIPT Test_KillAllExceptSkaterPed kill prefix = "trg_test_walk" kill prefix = "trg_test_car" kill prefix = "trg_test_crowd" kill prefix = "trg_test_standped" kill prefix = "trg_test_veh_test" kill prefix = "trg_test_ghost" kill prefix = "trg_g_" kill prefix = "test_bouncy" ENDSCRIPT
SCRIPT Test_WibbleScriptaaa v = -0.25000000000 u = 0 down = 0 across = 0 up = 0 grid_inc = 0.25000000000 BEGIN v = -0.25000000000 u = 0.75000000000 SetUVWibbleOffsets sector = Test_AnimTest01 u_off = <u> , v_off = <v> wait 10 frames REPEAT ENDSCRIPT
FLAG_SJ_CROWD_CHEERING = 0 FLAG_SJ_CROWD_CHEERING_HUGE = 1 FLAG_SJ_CROWD_CHEERING_BIG = 2 FLAG_SJ_CROWD_CHEERING_MED = 3 FLAG_SJ_CROWD_CHEERING_SMALL = 4 FLAG_SJ_CROWD_EXCITED_HUGE = 5 FLAG_SJ_CROWD_EXCITED_BIG = 6 FLAG_SJ_CROWD_EXCITED_MED = 7 FLAG_SJ_CROWD_EXCITED_SMALL = 8 SCRIPT SJ_WAT_Crowd u = 0 framerate = 10 grid_size = 8 offset = ( 1.00000000000 / <grid_size> ) max_offset = ( 1 - <offset> ) v = <max_offset> BEGIN IF TRG_SJ_CrowdGhost : Obj_FlagSet FLAG_SJ_CROWD_CHEERING GetRandomValue name = random_offset a = 4 b = 7 integer ELSE GetRandomValue name = random_offset a = 0 b = 3 integer ENDIF u = ( <offset> * <random_offset> ) BEGIN SetUVWibbleOffsets sector = <object> u_off = <u> , v_off = <v> IF NOT ( <v> < 0 ) v = ( <v> - <offset> ) ELSE v = <max_offset> BREAK ENDIF wait <framerate> frames REPEAT REPEAT ENDSCRIPT
SCRIPT SJ_Crowd ClearExceptionGroup SJ_Crowd SetException ex = SkaterEnterCombo scr = SJ_Crowd_SkaterEnterCombo group = SJ_Crowd ENDSCRIPT
SCRIPT SJ_Crowd_SkaterEnterCombo small_trick_score = 5000 med_trick_score = 50000 big_trick_score = 200000 huge_trick_score = 1000000 ClearExceptionGroup SJ_Crowd SetException ex = SkaterExitCombo scr = SJ_Crowd_SkaterExitCombo group = SJ_Crowd BEGIN IF SkaterCurrentScorePotGreaterThan <huge_trick_score> printf "&&&& current score: huge cheer &&&&" SJ_Crowd_Cheer excite_level = huge ELSE IF SkaterCurrentScorePotGreaterThan <big_trick_score> printf "&&&& current score: big cheer &&&&" SJ_Crowd_Cheer excite_level = big ELSE IF SkaterCurrentScorePotGreaterThan <med_trick_score> printf "&&&& current score: med cheer &&&&" SJ_Crowd_Cheer excite_level = med ELSE IF SkaterCurrentScorePotGreaterThan <small_trick_score> printf "&&&& current score: small cheer &&&&" SJ_Crowd_Cheer excite_level = small ENDIF ENDIF ENDIF ENDIF wait 1 frame REPEAT ENDSCRIPT
SCRIPT SJ_Crowd_SkaterExitCombo small_trick_score = 5000 med_trick_score = 50000 big_trick_score = 200000 huge_trick_score = 1000000 ClearExceptionGroup SJ_Crowd SetException ex = SkaterEnterCombo scr = SJ_Crowd_SkaterEnterCombo group = SJ_Crowd IF SkaterLastScoreLandedGreaterThan <huge_trick_score> printf "&&&& last landed: huge cheer &&&&" SJ_Crowd_Cheer cheer_level = huge ELSE IF SkaterLastScoreLandedGreaterThan <big_trick_score> printf "&&&& last landed: big cheer &&&&" SJ_Crowd_Cheer cheer_level = big ELSE IF SkaterLastScoreLandedGreaterThan <med_trick_score> printf "&&&& last landed: med cheer &&&&" SJ_Crowd_Cheer cheer_level = med ELSE IF SkaterLastScoreLandedGreaterThan <small_trick_score> printf "&&&& last landed: small cheer &&&&" SJ_Crowd_Cheer cheer_level = small ELSE printf "&&&& you suck! &&&" SJ_Crowd_Cheer cheer_level = suckage ENDIF ENDIF ENDIF ENDIF ENDSCRIPT
SCRIPT SJ_Crowd_Cheer Obj_ClearFlag ALL IF GotParam cheer_level printf "gotparam cheer level &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&" ENDIF IF GotParam excite_level printf "gotparam excite level &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&" ENDIF SWITCH <cheer_level> CASE huge Obj_SetFlag FLAG_SJ_CROWD_CHEERING DEFAULT Obj_SetFlag FLAG_SJ_CROWD_CHEERING ENDSWITCH ENDSCRIPT
SCRIPT SJ_Crowd_WaitBetweenCheers Obj_SetFlag FLAG_SJ_CROWD_CHEERING printf "&&&& waiting to cheer again &&&&" wait RANDOM_RANGE PAIR(1.00000000000, 5.00000000000) seconds printf "&&&& done waiting to cheer &&&&" Obj_ClearFlag FLAG_SJ_CROWD_CHEERING ENDSCRIPT
SCRIPT testlevel_checkforskater BEGIN wait 10 frame IF Obj_ObjectInRect dist = 35 width = 15 height = 25 type = skater offset = VECTOR(0.00000000000, 0.00000000000, 20.00000000000) debug printf "#### CAR SEES SKATER!!! ####" ENDIF REPEAT ENDSCRIPT

